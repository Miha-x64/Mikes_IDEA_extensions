<idea-plugin url="https://github.com/Miha-x64/Mikes_IDEA_extensions">

    <id>net.aquadc.mike.plugin</id>
    <name>Mike's IDEA Extensions</name>
    <category>Inspection</category>
    <vendor email="silizium@ok.de" url="http://aquadc.net/">Mike</vendor>

    <extensions defaultExtensionNs="com.intellij">

        <localInspection
            language="kotlin"
            shortName="ktPropBy" displayName="Heavyweight property delegation"
            groupPath="Kotlin" groupName="Performance"
            enabledByDefault="true" level="WARNING"
            implementationClass="net.aquadc.mike.plugin.kotlin.KtPropByInspection" />
        <!-- TODO: is there a way to make this run only for production sources? -->

        <localInspection
            language="kotlin"
            shortName="ktIdIsJavaKw" displayName="Declaration name is Java keyword"
            groupPath="Kotlin" groupName="Java interop issues"
            enabledByDefault="true" level="WARNING"
            implementationClass="net.aquadc.mike.plugin.kotlin.KtIdIsJavaKeywordInspection" />

        <localInspection
            language="UAST"
            shortName="atomicAsVolatile" displayName="Atomic can be replaced with volatile"
            groupName="JVM languages"
            enabledByDefault="true" level="WARNING"
            implementationClass="net.aquadc.mike.plugin.memory.AtomicAsVolatileInspection" />

        <localInspection
            language="UAST"
            shortName="uncachedAlloc" displayName="Allocation should be cached"
            groupPath="JVM languages" groupName="Performance"
            enabledByDefault="true" level="WARNING"
            implementationClass="net.aquadc.mike.plugin.memory.UncachedAllocInspection" />

        <localInspection
            language="kotlin"
            shortName="ktNoinlineFunc" displayName="Function won't be inlined"
            groupPath="Kotlin" groupName="Performance"
            enabledByDefault="true" level="WARNING"
            implementationClass="net.aquadc.mike.plugin.kotlin.KtNoinlineFuncInspection" />

        <localInspection
            language="kotlin"
            shortName="ktConcatNullable" displayName="Nullable argument to string concatenation"
            groupPath="Kotlin" groupName="Probable bugs"
            enabledByDefault="true" level="WARNING"
            implementationClass="net.aquadc.mike.plugin.kotlin.ConcatNullable" />

        <localInspection
            language="kotlin"
            shortName="ktInlineFunctionLeaksAnonymous" displayName="Inline function leaks anonymous declaration"
            groupPath="Kotlin" groupName="Performance"
            enabledByDefault="true" level="WARNING"
            implementationClass="net.aquadc.mike.plugin.kotlin.KtInlineFunctionLeaksAnonymousDeclaration" />

        <localInspection
            language="JAVA"
            shortName="BigDecimalConstant" displayName="BigDecimal instantiation can be replaced with constant"
            groupPath="Java" groupName="Performance"
            enabledByDefault="true" cleanupTool="true" level="WARNING"
            implementationClass="net.aquadc.mike.plugin.bigdecimal.BigDecimalConstantInspection"/>

        <localInspection
            language="JAVA"
            shortName="BigDecimalSignum" displayName="BigDecimal.compareTo(ZERO) can be replaced with signum()"
            groupPath="Java" groupName="Performance"
            enabledByDefault="true" cleanupTool="true" level="WARNING"
            implementationClass="net.aquadc.mike.plugin.bigdecimal.BigDecimalSignumInspection"/>

        <localInspection
            language="RegExp"
            shortName="BadCyrillicRegexp" displayName="Bad Cyrillic character range"
            groupName="RegExp"
            enabledByDefault="true" level="WARNING"
            implementationClass="net.aquadc.mike.plugin.regexp.BadCyrillicRegexp" />

        <highlightingPassFactory implementation="net.aquadc.mike.plugin.interfaces.UpcastHints" />
    </extensions>

    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>org.jetbrains.kotlin</depends>
    <depends optional="true" config-file="withAndroid.xml">org.jetbrains.android</depends>

    <actions>
    </actions>

</idea-plugin>
